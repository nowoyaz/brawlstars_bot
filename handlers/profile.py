from aiogram import types
from aiogram.dispatcher import Dispatcher
from utils.helpers import get_user_language, is_user_premium
from keyboards.inline_keyboard import inline_main_menu_keyboard
from database.session import SessionLocal
from database.models import User
from database.achievements import get_user_achievements

async def show_profile(callback: types.CallbackQuery, locale):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    locale = get_user_language(callback.from_user.id)
    await callback.answer()
    
    session = SessionLocal()
    user = session.query(User).filter(User.tg_id == callback.from_user.id).first()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
    if not user:
        user = User(
            tg_id=callback.from_user.id,
            username=callback.from_user.username,
            language='ru',
            crystals=0
        )
        session.add(user)
        session.commit()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_achievements = get_user_achievements(user.tg_id)
    achievements_count = len(user_achievements) if user_achievements else 0
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    status = locale.get("premium_status_active") if is_user_premium(user.tg_id) else locale.get("premium_status_inactive")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
    text = locale.get("profile_text", """
üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

üìù ID: {user_id}
üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {achievements_count}
ü™ô –ú–æ–Ω–µ—Ç: {crystals}
üìä –°—Ç–∞—Ç—É—Å: {status}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_date}""").format(
        user_id=user.tg_id,
        achievements_count=achievements_count,
        crystals=user.crystals,
        status=status,
        reg_date=user.created_at.strftime("%d.%m.%Y")
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if user_achievements:
        text += "\n\nüìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:\n"
        for achievement in user_achievements:
            text += f"{achievement['icon']} {achievement['name']}\n"
    
    session.close()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
    await callback.message.edit_text(
        text,
        reply_markup=inline_main_menu_keyboard(locale)
    )

def register_profile_handlers(dp: Dispatcher, locale):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–æ—Ñ–∏–ª—è"""
    dp.register_callback_query_handler(
        lambda call: show_profile(call, locale),
        lambda c: c.data == "profile"
    ) 